{"componentChunkName":"component---src-pages-ibmcloud-openvpn-vsi-vpc-setup-index-mdx","path":"/ibmcloud/openvpn-vsi-vpc-setup/","result":{"pageContext":{"frontmatter":{"title":"Setup OpenVPN Infrastructure to Access IBM Cloud VPC / Classic Services"},"relativePagePath":"/ibmcloud/openvpn-vsi-vpc-setup/index.mdx","titleType":"page","MdxNode":{"id":"d81ad7ac-d5a6-578e-82eb-c9db4c802e5c","children":[],"parent":"1b14094e-7781-5b7d-bd24-d9548a4036fc","internal":{"content":"---\ntitle: Setup OpenVPN Infrastructure to Access IBM Cloud VPC / Classic Services\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\n\n</PageDescription>\n\n### **Solution Architecture:**\n\n![Solution Architecture](/images/solution-architecture.png)\n\n### **Solution Assumption:** \n\n- It is assumed that the IBM Cloud VPC Network is pre-configured.\n- It is assumed that the Transit Gateway has been configured with required connectivity\nbetween VPC infrastructure and Classic Infrastructure.\n- A CentOS server is provisioned with 4vCPU / 8GB Memory & 100GB Disk for\nconfiguring OpenVPN server. Hostname for this server is “nativeipvpnserver”.\n- We will be a leveraging two VPC one each from Dallas and Sydney multi-zone region.\n\n- Dallas VPC name “daltestvpc” & Sydeny VPC Name “demovpc1”.\n- Each zone in Dallas have been auto configured with following Subnet.\n\n    * AZ Dallas1 - 10.240.0.0/18.\n    * AZ Dallas2 - 10.240.64.0/18.\n    * AZ Dallas3 - 10.240.128.0/18.\n\n- Each zone in Sydney have been auto configured with following Subnet.\n\n    * AZ Sydney1 - 10.245.0.0/18.\n    * AZ Sydne2 - 10.245.64.0/18.\n    * AZ Sydney3 - 10.245.128.0/18.\n\n- A RedHat server have been configured under each AZ for validating network connectivity from user desktop to resources in each AZ.\n- A RedHat OS server have been configured under classic infrastructure in Dallas region for network connectivity validation.\n- There are two roles have been assumed for the exercise **Cloud Administrator** and **DevOps User**.\n- **Cloud Administrator** will be responsible for implementing OpenVPN Solution and **DevOps user** responsible for managing Applications which is running behind OpenVPN infrastructure.\n\n### **High-Level Implementation Steps:**\n\n1. OpenVPN Solution Implementation.\n2. IBM Cloud Security Group Configuration for OpenVPN Infrastructure.\n3. Add new VPN User in OpenVPN server.\n4. OpenVPN Client Setup & Connectivity Validation.\n\n### **OpenVPN Solution Implementation(Role : Cloud Administrator):**\n\nWe will be using a CentOS VSI instance as OpenVPN server for this exercise.\n\n***Step 1:***\n\nLogin to **to-be** OpenVPN server **nativeipvpnserver**.\n***Step 2:***\n\nRun “yum update -y” command to Update OS packages.\n\n![yumupdate](/images/yumupdate.png)\n***Step 3:***\n\nFind out IP Address of OpenVPN server **nativeipvpnserver**. **ip a** gives interface private IP address for OpenVPN Server host.\n\n![ipa](/images/ipa.png)\n\n***Step 4:***\n\nThe OpenVPN Server host Public IP (Floating IP) address needs to be find from IBM Cloud Console.\n\n![nativeipvpnserver](/images/nativeipvpnserver.png)\n\n***Step 5:***\n\nOpenVPN server “nativeipvpnserver” Private IP address (10.240.0.4) directly attached to server host and server is behind NAT (Floating IP) with public IP address (52.116.138.238).\n\n***Step 6:***\n\nDownload OpenVPN server Management (Install/Config/Manage) script from following location `wget https://raw.githubusercontent.com/Angristan/openvpn- install/master/openvpn-install.sh -O centos7-vpn.sh` & change the permission of downloaded script “chmod +x centos7-vpn.sh\n\n![vpnscript](/images/vpnscript.png)\n\n***Step 7:***\n\nBegin OpenVPN server installation by running “centos7-vpn.sh” script.\n\n![hostname](/images/hostname.png)\n\n***Step 8:***\n\nAccent default private IP interface of OpenVPN server “nativeipvpnserver” where OpenVPN services will be listening.\n\n![openvpnservice](/images/openvpnservice.png)\n\n***Step 9:***\n\nAccept NAT ip address which will act as public gateway IP for OpenVPN server.\n\n![openvpnservice](/images/openvpnservice1.png)\n\n***Step 10:***\n\nDisable IPv6 support.\n\n![disableipv6](/images/disableipv6.png)\n\n***Step 11:***\n\nConfigure OpenVPN service port number & I would prefer running OpenVPN service with default port number.\n\n![openvpnportno](/images/openvpnportno.png)\n\n***Step 12:***\n\nConfigure OpenVPN server port number.\n\n![openvpnportno1](/images/openvpnportno1.png)\n\n***Step 13:***\n\nConfigure DNS server settings for OpenVPN server.\n\n![dns](/images/dns.png)\n\n***Step 14:***\n\nDisable compression & recommended to disable this configuration. Press “Enter” to complete OpenVPN Server installation .\n\n![serverinstallation](/images/serverinstallation.png)\n\n***Step 15:***\n\nConfigure your first OpenVPN client (Key file) & enter the name of the client. For this exercise I have chosen my first VPN user as “demovpnuser01” and press enter.\n\n![demovpnuser01](/images/demovpnuser01.png)\n\n***Step 16:***\n\nSet a password phrase for VPN Client Key & OpenVPN keys stored under /root/demovpnuser01.ovpn.\n\n![vpnclient](/images/vpnclient.png)\n\n***Step 17:***\n\nEnable OpenVPN server service.\n\n```bash\nsystemctl enable openvpn-server@server.service\n  ```\n\n***Step 18:***\n\nStart OpenVPN service.\n\n```bash\nsystemctl start openvpn-server@server.service\n  ```\n\n***Step 19:***\n\nValidate OpenVPN service status.\n\n![statuscheck](/images/statuscheck.png)\n\nNow, we have successfully completed OpenVPN server installation.\n\n### **IBM Cloud Security Group Configuration for OpenVPN VSI (Role : Cloud Administrator):**\n\n\n***Step 1:***\n\nCreate IBM Cloud security group with following Inbound / Outbound traffic\n\n   * Inbound on port number 1194.\n   * Outbound Traffic `All`\n\n***Step 2:***\n\nLogin to IBM Cloud & `Create` new security group `openvpnsg`.\n\n![security-group](/images/security-group.png)\n\n***Step 3:***\n\nAdd new Inbound rule with OpenVPN Service port number 1194 as below.\n\n![createsecuritygroup](/images/createsecuritygroup.png)\n\n***Step 4:***\n\nCreate Outbound rule as blow.\n\n![outbound](/images/outbound.png)\n\n***Step 5:***\n\nAllocate security `openvpnsg` to OpenVPN VSI hosts `nativeipvpnserver` network interface.\n\n![openvpnsg](/images/openvpnsg.png)\n\nNow Security group have been successfully created and assigned to OpenVPN VSI hosts `nativeipvpnserver`.\n\n### **Add new VPN User in OpenVPN server (Role : Cloud Administrator):**\n\nIn this section we will show you how to add a new users/Client to OpenVPN server.\n\n***Step 1:***\n\nLogin to OpenVPN server VSI instance and execute **centos7-vpn.sh** script which was downloaded during **OpenVPN Server Setup** phase.\n\n![serversetup1](/images/serversetup1.png)\n\n***Step 2:***\n\nFrom the menu select Option-1 to add new user and press enter.\n\n![serversetup2](/images/serversetup2.png)\n\n***Step 3:***\n\nEnter the name of the client (user name) for new OpenVPN client key. In this example I am creating a user call `demouser02` & protect this Client key with a password.\n\n![serversetup3](/images/serversetup3.png)\n\n***Step 4:***\n\nNew client key `demouser02.ovpn` have been successfully created and stored under /root directory.\n\n![serversetup4](/images/serversetup4.png)\n\n***Step 5:***\n\nThis OVPN file needs to be shared with user for authenticating with VPN server for accessing resources in VPC and Classic infrastructure.\n\n\n### **Install OpenVPN Client & Authenticate to OpenVPN Server in IBM Cloud (Role : DevOps):**\n\n***Step 1:***\n\nInstall OpnVPN client in user desktop. [OpenVPN client can be found](https://tunnelblick.net/).\n\n***Step 2:***\n\nStart OpenVPN Client (Tunnelblick). \n\n![Tunnelblick](/images/Tunnelblick.png)\n\n**Note:** I am testing this from my MacBook\n\n***Step 3:***\n\nThe OpenVPN Client window looks like below. \n\n![clientwindow](/images/clientwindow.png)\n\n\n***Step 4:***\n\nAdd VPN key from your desktop to OpenVPN client by `drag-drop` under `Configurations` tab. As soon as user drop the VPN key file under configuration tab, user will be prompted to share this key with `All users` or `Only Me` option. \n\n![configurationwindow](/images/configurationwindow.png)\n\n***Step 5:***\n\nOnce the OVPN key is successfully added to OpenSec VPN client and user should be getting following confirmation screen.\n\n![configurationwindow1](/images/configurationwindow1.png)\n\n***Step 6:***\n\nVPN client is ready to authenticate with OpenVPN server. Select `Connect` button from above screen. Once VPN Client authenticate with OpenVPN server then the user should be able to see `Connected Success` message screen as below.\n\n![configurationwindow2](/images/configurationwindow2.png)\n\n***Step 7:***\n\nNow user is successfully connected to OpenVPN server in IBM Cloud and user should be able to access the Server resources under VPC & Classic Infrastructure over Private IP. Lets quick validate the connectivity from DevOps user laptop\n\n***Step 8:***\n\nBelow are the list of server available under various Subnets in VPC “daltestvpc” in Dallas MZR.\n\n![daltestvpc](/images/daltestvpc.png)\n\n***Step 9:***\n\nLets Ping the IP Address of the servers in Dallas VPC.\n\n![daltestvpc1](/images/daltestvpc1.png)\n\n***Step 10:***\n\nBello are the list of Devices available under Classic Infra Network & lets quickly validate network connectivity to this thru VPN tunnel using **ping** command..\n\n![daltestvpc2](/images/daltestvpc2.png)\n\n\nWe have successfully Setup OpenVPN infrastructure for Accessing VPC & Classic Infrastructure resources.","type":"Mdx","contentDigest":"664f780ccfadc459c868e56ce84d1205","counter":765,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Setup OpenVPN Infrastructure to Access IBM Cloud VPC / Classic Services"},"exports":{},"rawBody":"---\ntitle: Setup OpenVPN Infrastructure to Access IBM Cloud VPC / Classic Services\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\n\n</PageDescription>\n\n### **Solution Architecture:**\n\n![Solution Architecture](/images/solution-architecture.png)\n\n### **Solution Assumption:** \n\n- It is assumed that the IBM Cloud VPC Network is pre-configured.\n- It is assumed that the Transit Gateway has been configured with required connectivity\nbetween VPC infrastructure and Classic Infrastructure.\n- A CentOS server is provisioned with 4vCPU / 8GB Memory & 100GB Disk for\nconfiguring OpenVPN server. Hostname for this server is “nativeipvpnserver”.\n- We will be a leveraging two VPC one each from Dallas and Sydney multi-zone region.\n\n- Dallas VPC name “daltestvpc” & Sydeny VPC Name “demovpc1”.\n- Each zone in Dallas have been auto configured with following Subnet.\n\n    * AZ Dallas1 - 10.240.0.0/18.\n    * AZ Dallas2 - 10.240.64.0/18.\n    * AZ Dallas3 - 10.240.128.0/18.\n\n- Each zone in Sydney have been auto configured with following Subnet.\n\n    * AZ Sydney1 - 10.245.0.0/18.\n    * AZ Sydne2 - 10.245.64.0/18.\n    * AZ Sydney3 - 10.245.128.0/18.\n\n- A RedHat server have been configured under each AZ for validating network connectivity from user desktop to resources in each AZ.\n- A RedHat OS server have been configured under classic infrastructure in Dallas region for network connectivity validation.\n- There are two roles have been assumed for the exercise **Cloud Administrator** and **DevOps User**.\n- **Cloud Administrator** will be responsible for implementing OpenVPN Solution and **DevOps user** responsible for managing Applications which is running behind OpenVPN infrastructure.\n\n### **High-Level Implementation Steps:**\n\n1. OpenVPN Solution Implementation.\n2. IBM Cloud Security Group Configuration for OpenVPN Infrastructure.\n3. Add new VPN User in OpenVPN server.\n4. OpenVPN Client Setup & Connectivity Validation.\n\n### **OpenVPN Solution Implementation(Role : Cloud Administrator):**\n\nWe will be using a CentOS VSI instance as OpenVPN server for this exercise.\n\n***Step 1:***\n\nLogin to **to-be** OpenVPN server **nativeipvpnserver**.\n***Step 2:***\n\nRun “yum update -y” command to Update OS packages.\n\n![yumupdate](/images/yumupdate.png)\n***Step 3:***\n\nFind out IP Address of OpenVPN server **nativeipvpnserver**. **ip a** gives interface private IP address for OpenVPN Server host.\n\n![ipa](/images/ipa.png)\n\n***Step 4:***\n\nThe OpenVPN Server host Public IP (Floating IP) address needs to be find from IBM Cloud Console.\n\n![nativeipvpnserver](/images/nativeipvpnserver.png)\n\n***Step 5:***\n\nOpenVPN server “nativeipvpnserver” Private IP address (10.240.0.4) directly attached to server host and server is behind NAT (Floating IP) with public IP address (52.116.138.238).\n\n***Step 6:***\n\nDownload OpenVPN server Management (Install/Config/Manage) script from following location `wget https://raw.githubusercontent.com/Angristan/openvpn- install/master/openvpn-install.sh -O centos7-vpn.sh` & change the permission of downloaded script “chmod +x centos7-vpn.sh\n\n![vpnscript](/images/vpnscript.png)\n\n***Step 7:***\n\nBegin OpenVPN server installation by running “centos7-vpn.sh” script.\n\n![hostname](/images/hostname.png)\n\n***Step 8:***\n\nAccent default private IP interface of OpenVPN server “nativeipvpnserver” where OpenVPN services will be listening.\n\n![openvpnservice](/images/openvpnservice.png)\n\n***Step 9:***\n\nAccept NAT ip address which will act as public gateway IP for OpenVPN server.\n\n![openvpnservice](/images/openvpnservice1.png)\n\n***Step 10:***\n\nDisable IPv6 support.\n\n![disableipv6](/images/disableipv6.png)\n\n***Step 11:***\n\nConfigure OpenVPN service port number & I would prefer running OpenVPN service with default port number.\n\n![openvpnportno](/images/openvpnportno.png)\n\n***Step 12:***\n\nConfigure OpenVPN server port number.\n\n![openvpnportno1](/images/openvpnportno1.png)\n\n***Step 13:***\n\nConfigure DNS server settings for OpenVPN server.\n\n![dns](/images/dns.png)\n\n***Step 14:***\n\nDisable compression & recommended to disable this configuration. Press “Enter” to complete OpenVPN Server installation .\n\n![serverinstallation](/images/serverinstallation.png)\n\n***Step 15:***\n\nConfigure your first OpenVPN client (Key file) & enter the name of the client. For this exercise I have chosen my first VPN user as “demovpnuser01” and press enter.\n\n![demovpnuser01](/images/demovpnuser01.png)\n\n***Step 16:***\n\nSet a password phrase for VPN Client Key & OpenVPN keys stored under /root/demovpnuser01.ovpn.\n\n![vpnclient](/images/vpnclient.png)\n\n***Step 17:***\n\nEnable OpenVPN server service.\n\n```bash\nsystemctl enable openvpn-server@server.service\n  ```\n\n***Step 18:***\n\nStart OpenVPN service.\n\n```bash\nsystemctl start openvpn-server@server.service\n  ```\n\n***Step 19:***\n\nValidate OpenVPN service status.\n\n![statuscheck](/images/statuscheck.png)\n\nNow, we have successfully completed OpenVPN server installation.\n\n### **IBM Cloud Security Group Configuration for OpenVPN VSI (Role : Cloud Administrator):**\n\n\n***Step 1:***\n\nCreate IBM Cloud security group with following Inbound / Outbound traffic\n\n   * Inbound on port number 1194.\n   * Outbound Traffic `All`\n\n***Step 2:***\n\nLogin to IBM Cloud & `Create` new security group `openvpnsg`.\n\n![security-group](/images/security-group.png)\n\n***Step 3:***\n\nAdd new Inbound rule with OpenVPN Service port number 1194 as below.\n\n![createsecuritygroup](/images/createsecuritygroup.png)\n\n***Step 4:***\n\nCreate Outbound rule as blow.\n\n![outbound](/images/outbound.png)\n\n***Step 5:***\n\nAllocate security `openvpnsg` to OpenVPN VSI hosts `nativeipvpnserver` network interface.\n\n![openvpnsg](/images/openvpnsg.png)\n\nNow Security group have been successfully created and assigned to OpenVPN VSI hosts `nativeipvpnserver`.\n\n### **Add new VPN User in OpenVPN server (Role : Cloud Administrator):**\n\nIn this section we will show you how to add a new users/Client to OpenVPN server.\n\n***Step 1:***\n\nLogin to OpenVPN server VSI instance and execute **centos7-vpn.sh** script which was downloaded during **OpenVPN Server Setup** phase.\n\n![serversetup1](/images/serversetup1.png)\n\n***Step 2:***\n\nFrom the menu select Option-1 to add new user and press enter.\n\n![serversetup2](/images/serversetup2.png)\n\n***Step 3:***\n\nEnter the name of the client (user name) for new OpenVPN client key. In this example I am creating a user call `demouser02` & protect this Client key with a password.\n\n![serversetup3](/images/serversetup3.png)\n\n***Step 4:***\n\nNew client key `demouser02.ovpn` have been successfully created and stored under /root directory.\n\n![serversetup4](/images/serversetup4.png)\n\n***Step 5:***\n\nThis OVPN file needs to be shared with user for authenticating with VPN server for accessing resources in VPC and Classic infrastructure.\n\n\n### **Install OpenVPN Client & Authenticate to OpenVPN Server in IBM Cloud (Role : DevOps):**\n\n***Step 1:***\n\nInstall OpnVPN client in user desktop. [OpenVPN client can be found](https://tunnelblick.net/).\n\n***Step 2:***\n\nStart OpenVPN Client (Tunnelblick). \n\n![Tunnelblick](/images/Tunnelblick.png)\n\n**Note:** I am testing this from my MacBook\n\n***Step 3:***\n\nThe OpenVPN Client window looks like below. \n\n![clientwindow](/images/clientwindow.png)\n\n\n***Step 4:***\n\nAdd VPN key from your desktop to OpenVPN client by `drag-drop` under `Configurations` tab. As soon as user drop the VPN key file under configuration tab, user will be prompted to share this key with `All users` or `Only Me` option. \n\n![configurationwindow](/images/configurationwindow.png)\n\n***Step 5:***\n\nOnce the OVPN key is successfully added to OpenSec VPN client and user should be getting following confirmation screen.\n\n![configurationwindow1](/images/configurationwindow1.png)\n\n***Step 6:***\n\nVPN client is ready to authenticate with OpenVPN server. Select `Connect` button from above screen. Once VPN Client authenticate with OpenVPN server then the user should be able to see `Connected Success` message screen as below.\n\n![configurationwindow2](/images/configurationwindow2.png)\n\n***Step 7:***\n\nNow user is successfully connected to OpenVPN server in IBM Cloud and user should be able to access the Server resources under VPC & Classic Infrastructure over Private IP. Lets quick validate the connectivity from DevOps user laptop\n\n***Step 8:***\n\nBelow are the list of server available under various Subnets in VPC “daltestvpc” in Dallas MZR.\n\n![daltestvpc](/images/daltestvpc.png)\n\n***Step 9:***\n\nLets Ping the IP Address of the servers in Dallas VPC.\n\n![daltestvpc1](/images/daltestvpc1.png)\n\n***Step 10:***\n\nBello are the list of Devices available under Classic Infra Network & lets quickly validate network connectivity to this thru VPN tunnel using **ping** command..\n\n![daltestvpc2](/images/daltestvpc2.png)\n\n\nWe have successfully Setup OpenVPN infrastructure for Accessing VPC & Classic Infrastructure resources.","fileAbsolutePath":"/home/runner/work/ibm-enterprise-runbooks/ibm-enterprise-runbooks/src/pages/ibmcloud/openvpn-vsi-vpc-setup/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","2982904675","3018647132","3018647132","3037994772","3037994772","63531786","63531786","768070550"]}